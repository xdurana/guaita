I18N_EXPAND = typeof(I18N_EXPAND) == 'undefined' ? 'Expandir' : I18N_EXPAND;
I18N_COLLAPSE = typeof(I18N_COLLAPSE) == 'undefined' ? 'Contraer' : I18N_COLLAPSE;
I18N_BACK = typeof(I18N_BACK) == 'undefined' ? 'Volver' : I18N_BACK;
I18N_PREV = typeof(I18N_PREV) == 'undefined' ? 'anterior' : I18N_PREV;
I18N_NEXT = typeof(I18N_NEXT) == 'undefined' ? 'siguiente' : I18N_NEXT;
I18N_NONE = typeof(I18N_NONE) == 'undefined' ? 'Ninguno' : I18N_NONE;
I18N_WRITE_SELECTED = typeof(I18N_WRITE_SELECTED) == 'undefined' ? 'Escribir a los seleccionados' : I18N_WRITE_SELECTED;
I18N_SELECT_ALL = typeof(I18N_SELECT_ALL) == 'undefined' ? 'Seleccionar todos' : I18N_SELECT_ALL;
I18N_LAST_UPDATE = typeof(I18N_LAST_UPDATE) == 'undefined' ? 'Última actualización' : I18N_LAST_UPDATE;
I18N_NEXT_DELIVERY = typeof(I18N_NEXT_DELIVERY) == 'undefined' ? 'Próxima entrega' : I18N_NEXT_DELIVERY;
I18N_SUBJECT_CARD = typeof(I18N_SUBJECT_CARD) == 'undefined' ? 'Ficha de la asignatura' : I18N_SUBJECT_CARD;
I18N_AULA_DESIGN = typeof(I18N_AULA_DESIGN) == 'undefined' ? 'Diseño del aula' : I18N_AULA_DESIGN;
I18N_AULA_GO = typeof(I18N_AULA_GO) == 'undefined' ? 'Ir al aula' : I18N_AULA_GO;
I18N_RAC_GO = typeof(I18N_RAC_GO) == 'undefined' ? 'Ir al RAC' : I18N_RAC_GO;
I18N_AULAS = typeof(I18N_AULAS) == 'undefined' ? 'Aulas' : I18N_AULAS;
I18N_AULAS_LIST = typeof(I18N_AULAS_LIST) == 'undefined' ? 'Lista de aulas' : I18N_AULAS_LIST;
I18N_STUDENTS_LIST = typeof(I18N_STUDENTS_LIST) == 'undefined' ? 'Lista de estudiantes' : I18N_STUDENTS_LIST;
I18N_STUDENT_CARD = typeof(I18N_STUDENT_CARD) == 'undefined' ? 'Ficha de estudiante' : I18N_STUDENT_CARD;
I18N_SNUM = typeof(I18N_SNUM) == 'undefined' ? 'Nº Estudiantes' : I18N_SNUM;
I18N_STOTAL = typeof(I18N_STOTAL) == 'undefined' ? 'Totales' : I18N_STOTAL;
I18N_SREP = typeof(I18N_SREP) == 'undefined' ? 'Repetidores' : I18N_SREP;
I18N_SNEW = typeof(I18N_SNEW) == 'undefined' ? 'Nuevos' : I18N_SNEW;
I18N_FILTER_STUDENTS_BY = typeof(I18N_FILTER_STUDENTS_BY) == 'undefined' ?  'Filtrar lista de estudiantes por' : I18N_FILTER_STUDENTS_BY;
I18N_STUDENTS_REP = typeof(I18N_STUDENTS_REP) == 'undefined' ?  'Estudiantes repetidores' : I18N_STUDENTS_REP;
I18N_STUDENTS_NEW = typeof(I18N_STUDENTS_NEW) == 'undefined' ?  'Estudiantes nuevos' : I18N_STUDENTS_NEW;
I18N_WITHOUT_CONN = typeof(I18N_WITHOUT_CONN) == 'undefined' ? 'Sin conexión' : I18N_WITHOUT_CONN;
I18N_DAYS_WITHOUT_CONN = typeof(I18N_DAYS_WITHOUT_CONN) == 'undefined' ? 'Días sin conexión' : I18N_DAYS_WITHOUT_CONN;
I18N_DAYS_WITHOUT_CONN_AULA = typeof(I18N_DAYS_WITHOUT_CONN_AULA) == 'undefined' ? 'Días sin conexión al aula' : I18N_DAYS_WITHOUT_CONN_AULA;
I18N_DAYS = typeof(I18N_DAYS) == 'undefined' ? 'Días' : I18N_DAYS;
I18N_LAST_CONN_CAMPUS = typeof(I18N_LAST_CONN_CAMPUS) == 'undefined' ? 'Última conexión al campus' : I18N_LAST_CONN_CAMPUS;
I18N_LAST_CONN_AULA = typeof(I18N_LAST_CONN_AULA) == 'undefined' ? 'Última conexión al aula (aula y widget)' : I18N_LAST_CONN_AULA;
I18N_LAST_CONN_AULA_TUTOR = typeof(I18N_LAST_CONN_AULA_TUTOR) == 'undefined' ? 'Última conexión al aula tutor' : I18N_LAST_CONN_AULA_TUTOR;
I18N_LAST_PAC_DELIVERED = typeof(I18N_LAST_PAC_DELIVERED) == 'undefined' ? 'Última PAC entregada' : I18N_LAST_PAC_DELIVERED;
I18N_LAST_PAC_UNDELIVERED = typeof(I18N_LAST_PAC_UNDELIVERED) == 'undefined' ? 'Última PAC no entregada' : I18N_LAST_PAC_UNDELIVERED;
I18N_LAST_PAC_UNPASSED = typeof(I18N_LAST_PAC_UNPASSED) == 'undefined' ? 'Última PAC no superada' : I18N_LAST_PAC_UNPASSED;
I18N_LAST_RAC_DOWNLOAD = typeof(I18N_LAST_RAC_DOWNLOAD) == 'undefined' ?  'Última descarga del RAC' : I18N_LAST_RAC_DOWNLOAD;
I18N_LAST_GRADE = typeof(I18N_LAST_GRADE) == 'undefined' ?  'Última nota puesta' : I18N_LAST_GRADE;
I18N_STATUS_CURRENT_ACTIV = typeof(I18N_STATUS_CURRENT_ACTIV) == 'undefined' ?  'Estado de la actividad actual' : I18N_STATUS_CURRENT_ACTIV;
I18N_STATUS_CURRENT_ACTIV_SHORT = typeof(I18N_STATUS_CURRENT_ACTIV_SHORT) == 'undefined' ?  'Estado actividad actual' : I18N_STATUS_CURRENT_ACTIV_SHORT;
I18N_NOT_REPORTED = typeof(I18N_NOT_REPORTED) == 'undefined' ? 'No informada' : I18N_NOT_REPORTED;
I18N_COMPLETED = typeof(I18N_COMPLETED) == 'undefined' ?  'Completada' : I18N_COMPLETED;
I18N_NO_RESULTS = typeof(I18N_NO_RESULTS) == 'undefined' ?  'Ningún resultado' : I18N_NO_RESULTS;
I18N_ACTIVATE = typeof(I18N_ACTIVATE) == 'undefined' ?  'Activar' : I18N_ACTIVATE;
I18N_TUTORING = typeof(I18N_TUTORING) == 'undefined' ?  'Tutoría' : I18N_TUTORING;
I18N_STUDIES = typeof(I18N_STUDIES) == 'undefined' ?  'Estudios' : I18N_STUDIES;
I18N_PERSONAL_DATA = typeof(I18N_PERSONAL_DATA) == 'undefined' ?  'Datos personales' : I18N_PERSONAL_DATA;
I18N_BUSINESS_DATA = typeof(I18N_BUSINESS_DATA) == 'undefined' ?  'Datos profesionales' : I18N_BUSINESS_DATA;
I18N_ACTIVITIES = typeof(I18N_ACTIVITIES) == 'undefined' ?  'Actividades' : I18N_ACTIVITIES;
I18N_MATERIALS = typeof(I18N_MATERIALS) == 'undefined' ?  'Materiales' : I18N_MATERIALS;
I18N_TOOLS = typeof(I18N_TOOLS) == 'undefined' ?  'Herramientas' : I18N_TOOLS;
I18N_ACTIV_NAME = typeof(I18N_ACTIV_NAME) == 'undefined' ?  'Nombre de la actividad' : I18N_ACTIV_NAME;
I18N_LAST_VISIT_DATE = typeof(I18N_LAST_VISIT_DATE) == 'undefined' ?  'Fecha última visita' : I18N_LAST_VISIT_DATE;
I18N_DELIVERY_DATE = typeof(I18N_DELIVERY_DATE) == 'undefined' ?  'Fecha de entrega' : I18N_DELIVERY_DATE;
I18N_GRADE = typeof(I18N_GRADE) == 'undefined' ?  'Nota' : I18N_GRADE;
I18N_PAC_PLAGI = typeof(I18N_PAC_PLAGI) == 'undefined' ?  'PACPlagi' : I18N_PAC_PLAGI;
I18N_MATERIAL_NAME = typeof(I18N_MATERIAL_NAME) == 'undefined' ?  'Nombre del material' : I18N_MATERIAL_NAME;
I18N_ANNOTATIONS = typeof(I18N_ANNOTATIONS) == 'undefined' ?  'Anotaciones' : I18N_ANNOTATIONS;
I18N_TOOL_NAME = typeof(I18N_TOOL_NAME) == 'undefined' ?  'Nombre de la herramienta' : I18N_TOOL_NAME;
I18N_PENDING_MSGS = typeof(I18N_PENDING_MSGS) == 'undefined' ?  'Mensajes pendientes' : I18N_PENDING_MSGS;
I18N_COMM_TOOLS = typeof(I18N_COMM_TOOLS) == 'undefined' ?  'Herramientas de comunicación' : I18N_COMM_TOOLS;
I18N_STUDENTS_DATA = typeof(I18N_STUDENTS_DATA) == 'undefined' ?  'Datos estudiantes' : I18N_STUDENTS_DATA;
I18N_CONSULTANTS_DATA = typeof(I18N_CONSULTANTS_DATA) == 'undefined' ?  'Datos consultores' : I18N_CONSULTANTS_DATA;
I18N_AULA_GENERAL = typeof(I18N_AULA_GENERAL) == 'undefined' ?  'Generales del aula' : I18N_AULA_GENERAL;
I18N_CONSULTANT = typeof(I18N_CONSULTANT) == 'undefined' ?  'Consultor' : I18N_CONSULTANT;
I18N_SUBJECTS_TOTAL = typeof(I18N_SUBJECTS_TOTAL) == 'undefined' ?  'Total de asignaturas' : I18N_SUBJECTS_TOTAL;
I18N_SUBJECTS = typeof(I18N_SUBJECTS) == 'undefined' ?  'Asignaturas' : I18N_SUBJECTS;
I18N_SELECTED_FILTER = typeof(I18N_SELECTED_FILTER) == 'undefined' ?  'filtro seleccionado' : I18N_SELECTED_FILTER;
I18N_SEE_CARD = typeof(I18N_SEE_CARD) == 'undefined' ?  'Ver ficha' : I18N_SEE_CARD;
I18N_SHOW_ALL = typeof(I18N_SHOW_ALL) == 'undefined' ?  'Mostrar todas' : I18N_SHOW_ALL;
I18N_RESTORE_FILTER = typeof(I18N_RESTORE_FILTER) == 'undefined' ?  'Restaurar filtro' : I18N_RESTORE_FILTER;


/* Avoid `console` errors in browsers that lack a console. */
(function() {
    var method;
    var noop = function () {};
    var methods = [
    'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',
    'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',
    'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',
    'timeStamp', 'trace', 'warn'
    ];
    var length = methods.length;
    var console = (window.console = window.console || {});

    while (length--) {
        method = methods[length];
        if (!console[method]) {
            console[method] = noop;
        }
    }
}());

/* Main Aulas Application Class */

var UOCAulas = (function($) {

    var dataURL = '/app/guaita/data/';              // base app data url
    var userRole = 'student';                       // student, consultant, teacher, tutor
    var autoClose = true;                           // controla el cierre automático de los bloques no seleccionados
    var today = new Date();                         // fecha actual
    
    var daysOffObj = {                              // valores dias sin conexión
        '7' : '7 '  + I18N_DAYS,
        '15': '15 ' + I18N_DAYS,
        '30': '30 ' + I18N_DAYS
    };

    var statusObj = {                              // valores estado
        '0': '&mdash;',
        '1': I18N_COMPLETED
    };

    var statusObjFilter = {                         // valores estado
        '0': '&mdash; ('+ I18N_NOT_REPORTED +')',
        '1': I18N_COMPLETED
    };

    var EMPTY_CHAR = '&mdash;';                     // Caracter de celda vacía por defecto;
    var MAX_TOOLS_PAGE = 5;                         // Máximo nº de herramientas por pagina (Tabla Herramientas Profesor)
    var EASING_DEFAULT = 'easeOutQuint';            // default easing function
    var DAYS_OFF_DEFAULT = '7';                     // Valor por defecto filtro días sin conexión
    var STATUS_DEFAULT = '1';                       // Valor por defecto  filtro estado
    var MS_PER_DAY = 1000 * 60 * 60 * 24;           // Milisegundos x Día

    
    /* Método importado de uoc/common.js */
    var getWinNm = function() {
        var now = new Date();
        var hr = String(now.getHours());
        var mn = String(now.getMinutes());
        var sc = String(now.getSeconds());
        var winNm = hr + mn + sc;
        return winNm;
    };

    /* Método importado de uoc/common.js */
    var oWin = function(event, url ) {
        event.preventDefault();
        event.stopPropagation();
        window.open(url,getWinNm(),'scrollbars,menubar,status,resizable,width=800,height=600');
    };

    /*
     * Parses date
     * @param str String - date in format dd/mm/yyyy
     */
    var parseDate = function (str){
        if (str === null) return new Date();
        var d = str.split('/');
        return new Date(d[2], d[1]-1, d[0]);
    };

    /*
     * Get date diff in days between two dates
     * @param date1 Date
     * @param date2 Date
     */
    var daysDiff = function(a, b) {
        var utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());
        var utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());
        return Math.floor((utc2 - utc1) / MS_PER_DAY);
    };


    /**
     *  Generic Setup
     */
    var setupGlobalAdjusts = function(){

        /* Declaración eventos delegados para las ventanas popup */
        $('#main').on('click', '.LaunchesOWin', function(event){
            oWin(event,$(this).attr('href'));
        });

        /* Selección multiple de usuarios */
        $('#main').on('click', '.check-all-users', function () {
            var chk = this;
            var tbl = $(this).closest('.tbl');
            tbl.find(".check-user").each(function(){
                if($(this).is(":visible"))
                    $(this).prop('checked', chk.checked);
                else
                    $(this).prop('checked', false);
            });

            if (jQuery().uniform) $.uniform.update(tbl.find(".check-user"));
        });

        /* Escribir a los seleccionados */
        $('#main').on('click', '.lnk-contact-all', function (e) {
            e.preventDefault();
            var tbl = $(this).closest('.tbl');
            var contacts = [];
            tbl.find(".check-user").each(function(){
                if($(this).is(":checked")) contacts.push($(this).val());
            });
            console.log(contacts.join(", "));
            // TODO: Completar funcionalidad (UOC)
        });
    };

    /**
     * DataTables Customizations
     */
    var setupDataTables = function(){

        /* DataTables defaults */
        $.extend( true, $.fn.dataTable.defaults, {
            "bAutoWidth": false,
            "bInfo": false,
            "bPaginate": false,
            "bSortClasses": false,
            "oLanguage": {
                "sZeroRecords": I18N_NO_RESULTS
            }
        });

        /* DataTables extensión de ordenación por fecha */
        $.extend( $.fn.dataTableExt.oSort, {
            "date-es-pre": function ( a ) {
                var esDate = a.split('/');
                return (esDate[2] + esDate[1] + esDate[0]) * 1;
            },
         
            "date-es-asc": function ( a, b ) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },
         
            "date-es-desc": function ( a, b ) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });

        /* DataTables custom filtering */
        $.fn.dataTableExt.search.push(
            function (settings, data, dataIndex ) {
                if($('#'+settings.nTable.id).hasClass('tbl-aula'))
                    return filterAula(settings.nTable.id, data, dataIndex);
                else if($('#'+settings.nTable.id).hasClass('tbl-student'))
                    return filterStudent(settings.nTable.id, data, dataIndex);
                else
                    return true;
            }
        );
    };


    /**
     * Setup jqueryui sortable
     */
    var setupSortable = function(){
        $( ".sortable" ).sortable({
            revert: 100,
            cursor: "move",
            handle: ".icon-move",
            placeholder: "ui-sortable-placeholder",
            forcePlaceholderSize: true,
            update : function(e, ui) {
                // TODO: Save new order
                console.log($(".sortable").sortable("toArray"));
            }
        });
    };


    /**
     * Setup jqueryui tooltip
     */
    var setupTooltips = function(){
        $('.tooltip').tooltip({
            position: {
            my: "left-20% bottom-12",
            at: "center top",
            using: function( position, feedback ) {
                $( this ).css( position );
                $( "<div>" )
                    .addClass( "tip-arrow" )
                    .appendTo( this );
                }
            }
        });
    };

    /**
     * Setup uniform checkboxes
     * @param elms array (optional)
     */
    var setupUniform = function (els) {
        if (!jQuery().uniform) return;

        if(!els) els = "input[type=checkbox]";

        $(els).each(function () {
            if ($(this).parents(".checker").size() === 0)
                $(this).uniform();
        });
    };


    /**
     * Setup jqueryui tab
     * @param tabs string: contenedor 
     */
    var addTabsEvents = function(tabs){
        $(tabs).tabs({
            active: 0,
            hide: 100,
            show: 200
        });
    };

    /**
     * Setup jqueryui accordion
     */
    var setupAccordions = function(){
        $(".accordion").on('click', '.block-head', function(ev) {
            if(userRole=='tutor')
                getAulaTutorData($(this).data('aula'), $(this).data('tutor'));
            else
                getSubjectData($(this).data('rel'));
               
        });

        $( ".accordion" ).each(function(){
            var $self = $(this);
            if(!$self.hasClass('ui-accordion')){
                $self.accordion({
                    heightStyle: "content",
                    collapsible: true,
                    header: '.block-head',
                    active: false,
                    event: false,
                    animate: {
                        easing: EASING_DEFAULT,
                        duration: 500
                    }
                });
            }
            // con class="open" abrimos el bloque inicialmente
            if ($self.hasClass('open')) $self.find('.block-head').trigger('click');
        });

        // Stop propagation for links in accordion headers
        $(".block-top").unbind("click").click(function(ev){ ev.stopPropagation(); });
    };


    /**
     * DataTables custom filter Lista Estudiantes (Profesor, Consultor)
     */
    var filterAula = function(tableID, data, index){

        var $filters = $('#'+tableID).closest('.block-aula').find('.block-filters-aula');

        if($filters.find(".f-srep").is(":checked") && data[5]==='no'){
            return false;
        }

        if($filters.find(".f-snew").is(":checked") && data[6]==='no'){
            return false;
        }

        if($filters.find(".f-pac-undelivered").is(":checked") && data[7]==='no'){
            return false;
        }

        if($filters.find(".f-pac-unpassed").is(":checked") && data[8]==='no'){
            return false;
        }

        if($filters.find(".f-days-off").is(":checked")){
            var daysOff = parseInt($filters.find(".s-days-off").val(), 10);
            if( daysDiff( parseDate(data[2]), today ) >= daysOff ) return false;
        }

        if($filters.find(".f-status").is(":checked")){
            if (data[4].indexOf( $filters.find(".s-status").val() ) < 0) return false;
        }

        return true;

    };

    /**
     * DataTables custom filter Ficha Estudiantes (Tutor)
     */
    var filterStudent = function(tableID, data, index){

        var $filters = $('#'+tableID).closest('.block-student').find('.block-filters-student');

        var f = $filters.find(".f-active").val();
        var d = parseInt($filters.find(".f-days-off").val(), 10);

        if(f === 'f-days-off'){
            $('#'+tableID).find('.filter-lbl').html(d + ' ' + I18N_DAYS_WITHOUT_CONN.toLowerCase() +
                '<br><a href="#" class="lnk-remove-filter">' + I18N_SHOW_ALL + '</a>');
            if( daysDiff( parseDate(data[1]), today ) >= d ) return false;
        }

        if(f === 'f-last-conn-aula'){
            $('#'+tableID).find('.filter-lbl').html(I18N_LAST_CONN_AULA  +
                '<br><a href="#" class="lnk-remove-filter">' + I18N_SHOW_ALL + '</a>');
            if( daysDiff( parseDate(data[2]), today ) > 0 ) return false;
        }

        if(f === 'f-last-pac-delivered'){
            $('#'+tableID).find('.filter-lbl').html(I18N_LAST_PAC_DELIVERED  +
                '<br><a href="#" class="lnk-remove-filter">' + I18N_SHOW_ALL + '</a>');
            if( data[4]==='no' ) return false;
        }

        if(f === 'reset'){
            $('#'+tableID).find('.filter-lbl').html(I18N_NONE +
                '<br><a href="#" class="lnk-restore-filter">' + I18N_RESTORE_FILTER + '</a>');
        }

        if(f === 'none'){
            $('#'+tableID).find('.filter-lbl').html(I18N_NONE);
        }

        return true;
    };


    /**
     * Get json data de la asignatura (Consultor / Profesor)
     * @param subject_id string: identificador asignatura
     */
    var getSubjectData = function(subject_id){
        var $subject = $('#subject_' + subject_id);
        var $head = $subject.children('.block-head');
        if($subject.hasClass('loaded')){
            toggleBlock('#subject_'+subject_id);
        }else{
            if(!$subject.hasClass('loading')){
                $subject.addClass('loading');
                $head.children('.ui-icon').spin('tiny');
                $.ajax({
                    type: "GET",
                    //TODO
                    url: UOCAulas.dataURL + '/app/guaita/plana/20141/03.515/71621/aules?idp=' + IDP + '&s=' + SESSIO + '&perfil=',
                    dataType: "json",
                    data: { id: subject_id, role: userRole }
                }).done(function(data){
                    if(userRole=='teacher') $subject.find('.block-subject').html(renderSubjectProfesor(data));
                    else $subject.find('.block-subject').html(renderSubjectConsultor(data));
                }).fail(function(jqXHR, status, error) {
                    $subject.find('.block-subject').html(renderError('subject',status,error));
                }).always(function() {
                    addSubjectEvents(subject_id);
                    $head.children('.ui-icon').spin(false);
                    $subject.removeClass('loading');
                    if(userRole=='teacher'){
                        getActivToolsData(subject_id, 0);
                    }else{
                        $subject.addClass('loaded');
                        toggleBlock('#subject_'+subject_id);
                    }
                });
            }
        }
    };

    /**
     * Get json data Lista de estudiantes (Tutor)
     * @param aula_id string: identificador del aula
     * @param tutor_id string: identificador del tutor
     */
    var getAulaTutorData = function(aula_id, tutor_id){
        var $aula = $('#aula_' + aula_id + '_' + tutor_id);
        var $head = $aula.children('.block-head');
        if($aula.hasClass('loaded')){
            toggleBlock('#aula_' + aula_id + '_' + tutor_id);
        }else{
            if(!$aula.hasClass('loading')){
                $aula.addClass('loading');
                $head.children('.ui-icon').spin('tiny');
                $.ajax({
                    type: "GET",
                    url: UOCAulas.dataURL + 'json/aula_' + userRole + '.json',
                    dataType: "json",
                    data: { aula: aula_id, tutor: tutor_id, role: userRole }
                }).done(function(data){
                    $aula.find('.block-tutor').html(renderAulaTutor(data, aula_id, tutor_id));
                }).fail(function(jqXHR, status, error) {
                    $aula.find('.block-tutor').html(renderError('tutor',status,error));
                }).always(function() {
                    addAulaTutorEvents(aula_id, tutor_id);
                    $head.children('.ui-icon').spin(false);
                    $aula.removeClass('loading').addClass('loaded');
                    toggleBlock('#aula_' + aula_id + '_' + tutor_id);
                });
            }
        }
    };

    /**
     * Get json data aula (Consultor, Profesor)
     * @param subject_id string: identificador asignatura
     * @param aula_id int: aula id
     * @param aula_name string: aula name
     * @param filter array - [0: filter class, 1: filters-days-off value]
     */
    var getAulaData = function(subject_id, aula_id, aula_name, filter){
        var $subject = $('#subject_' + subject_id);
        var $head = $subject.children('.block-head');
        var $block_subject = $subject.find('.block-subject');
        var $block_aula = $subject.find('.block-aula');
        var $block_overlay = $subject.find('.block-overlay');

        if(autoClose){
            $( ".accordion" ).each(function(){
                var $self = $(this);
                if($self.attr('id') !== $subject.attr('id') && $self.accordion("option", "active") !== false){
                    $self.accordion("activate", false);
                }
            });
        }

        $head.children('h3').append('<span class="sub-lbl"> &rsaquo; '+aula_name+'</span>');
        
        if(!$subject.hasClass('loading')){
            $subject.addClass('loading');
            $head.children('.ui-icon').spin('tiny');
            $block_overlay.children('.loading').spin('large');
            $block_overlay.fadeIn(100, EASING_DEFAULT);
            $.ajax({
                type: "GET",
                url: UOCAulas.dataURL + 'json/aula_' + aula_id +'.json',
                dataType: "json",
                data: { subject: subject_id, aula: aula_id }
            }).done(function(data){
                $block_aula.html(renderAula(data, filter, subject_id));
                $block_aula.attr('data-rel', aula_id);
            }).fail(function(jqXHR, status, error) {
                $block_aula.html(renderError('aula', status, error));
            }).always(function() {
                addAulaEvents(subject_id);
                $head.children('.ui-icon').spin(false);
                $block_overlay.children('.loading').spin(false);
                $block_overlay.fadeOut(500, 'easeInOutQuint');
                $subject.removeClass('loading');
                $block_subject.slideUp({ duration: 500, easing: EASING_DEFAULT });
                $block_aula.slideDown({ duration: 500, easing: EASING_DEFAULT });
            });
        }
    };

    /**
     * Get json data Herrameintas Actividad (Profesor)
     * @param subject_id string: identificador asignatura
     * @param activ_id int: activity id (0: Generales del aula)
     */
    var getActivToolsData = function(subject_id, activ_id){
        var $subject = $('#subject_' + subject_id);
        var $head = $subject.children('.block-head');
        var $block_subject = $subject.find('.block-subject');
        var $block_tools = $subject.find('.block-activ-tools');

        if(!$subject.hasClass('loading')){
            $subject.addClass('loading');
            $head.children('.ui-icon').spin('tiny');
            $block_tools.html('<span class="loading"></span>');
            $block_tools.children('.loading').spin('small');
            $.ajax({
                type: "GET",
                url: UOCAulas.dataURL + 'json/tools_' + activ_id +'.json',
                dataType: "json",
                data: { subject: subject_id, activity: activ_id }
            }).done(function(data){
                $block_tools.children('.loading').spin(false);
                $block_tools.append(renderActivTools(data,subject_id));
            }).fail(function(jqXHR, status, error) {
                $block_tools.append(renderError('tools', status, error));
            }).always(function() {
                addActivToolsEvents(subject_id);
                $head.children('.ui-icon').spin(false);
                $block_tools.children('.loading').spin(false).remove();
                $subject.removeClass('loading');
                if(!$subject.hasClass('loaded')){
                    $subject.addClass('loaded');
                    toggleBlock('#subject_'+subject_id);
                }
            });
        }
    };


    /**
     * Get json data student (Consultor, Profesor)
     * @param subject_id string: identificador asignatura
     * @param student_id int: identificador estudiante
     */
    var getStudentData = function(subject_id, student_id){
        var $subject = $('#subject_' + subject_id);
        var $head = $subject.children('.block-head');
        var $block_aula = $subject.find('.block-aula');
        var $block_student = $subject.find('.block-student');
        var $block_overlay = $subject.find('.block-overlay');
        var aula_id = $block_aula.data('rel');

        if(autoClose){
            $( ".accordion" ).each(function(){
                var $self = $(this);
                if($self.attr('id') !== $subject.attr('id') && $self.accordion("option", "active") !== false){
                    $self.accordion("activate", false);
                }
            });
        }

        if(!$subject.hasClass('loading')){
            $subject.addClass('loading');
            $head.children('.ui-icon').spin('tiny');
            $block_overlay.children('.loading').spin('large');
            $block_overlay.fadeIn(100, EASING_DEFAULT);
            $.ajax({
                type: "GET",
                url: UOCAulas.dataURL + 'json/student.json',
                dataType: "json",
                data: { subject: subject_id, aula: aula_id, student: student_id }
            }).done(function(data){
                $block_student.html(renderStudent(data));
                $block_student.attr('data-rel', student_id);
            }).fail(function(jqXHR, status, error) {
                $block_student.html(renderError('student', status, error));
            }).always(function() {
                addStudentEvents(subject_id);
                $head.children('.ui-icon').spin(false);
                $block_overlay.children('.loading').spin(false);
                $block_overlay.fadeOut(500, 'easeInOutQuint');
                $subject.removeClass('loading');
                $block_aula.slideUp({ duration: 500, easing: EASING_DEFAULT });
                $block_student.slideDown({ duration: 500, easing: EASING_DEFAULT });
            });
        }
    };


    /**
     * Get json data student (Tutor)
     * @param aula_id int: identificador aula
     * @param tutor_id int: identificador tutor
     * @param student_id int: identificador estudiante
     */
    var getStudentTutorData = function(aula_id, tutor_id, student_id, filter){
        var $aula = $('#aula_' + aula_id + '_' + tutor_id);
        var $head = $aula.children('.block-head');
        var $block_tutor = $aula.find('.block-tutor');
        var $block_student = $aula.find('.block-student');
        var $block_overlay = $aula.find('.block-overlay');

        $head.find('h3 > .lbl').html(I18N_STUDENT_CARD);

        if(!$aula.hasClass('loading')){
            $aula.addClass('loading');
            $head.children('.ui-icon').spin('tiny');
            $block_overlay.children('.loading').spin('large');
            $block_overlay.fadeIn(100, EASING_DEFAULT);
            $.ajax({
                type: "GET",
                url: UOCAulas.dataURL + 'json/student_tutor.json',
                dataType: "json",
                data: { aula: aula_id, tutor: tutor_id, student: student_id }
            }).done(function(data){
                $block_student.html(renderStudentTutor(data, filter, aula_id, tutor_id));
                $block_student.attr('data-rel', student_id);
            }).fail(function(jqXHR, status, error) {
                $block_student.html(renderError('student-tutor', status, error));
            }).always(function() {
                addStudentTutorEvents(aula_id, tutor_id);
                $head.children('.ui-icon').spin(false);
                $block_overlay.children('.loading').spin(false);
                $block_overlay.fadeOut(500, 'easeInOutQuint');
                $aula.removeClass('loading');
                $block_tutor.slideUp({ duration: 500, easing: EASING_DEFAULT });
                $block_student.slideDown({ duration: 500, easing: EASING_DEFAULT });
            });
        }
    };


    /**
     * Handle Toggle Acordeon Principal (bloques)
     * @param block_id string: identificador del bloque
     */
    var toggleBlock = function(block_id){
        var $block = $(block_id);
        if ($block.accordion("option", "active") === false) {
            $block.accordion('activate', 0);
        }else{
            $block.accordion("activate", false);
        }
    };


    /**
     * Setup events bloque asignatura (Consultor, Profesor)
     * @param subject_id string: identificador asignatura
     */
    var addSubjectEvents = function(subject_id){
        var $subject = $('#subject_' + subject_id);

        $subject.find('.tbl-subject').DataTable({
            "dom": 'tp',
            "order": [],
            "orderCellsTop": true/*,
            "aoColumnDefs": [
              { "bSortable": false, "aTargets": [0] }
            ]*/
        });

        $subject.on('click', '.tbl-subject tbody a', function(e) {
            e.preventDefault();
            var tr = $(this).closest('tr');
            getAulaData(subject_id, tr.data('rel'), tr.data('name'), [$(this).data('filter-col'), $subject.find('.filter-days-off').val()]);
        });

        $subject.on('change', '.filter-days-off', function(e) {
            var v = $(this).val();
            $subject.find('.days-off').each(function(){
                $(this).text( $(this).data('days-' + v) );
            });
            $subject.find('.tbl-subject').DataTable().draw();
        });

        if (userRole == 'teacher') {

            $subject.find('.tbl-subject-consult').DataTable({
                "dom": 'tp',
                "order": [],
                "orderCellsTop": true,
                "aoColumnDefs": [
                    { "sType": "date-es", "aTargets": [ 2, 3, 4, 5 ] }
                ]
            });

            addTabsEvents($subject.find('.teacher-tabs'));

            $subject.on('click', '.tbl-subgroups a.btn-subgroup', function(e) {
                e.preventDefault();
                $(this).closest('.tbl-subgroups').find('.active').removeClass('active');
                $(this).addClass('active');
                getActivToolsData(subject_id, $(this).data('rel'));
            });

            $subject.on('click', '.tbl-activ-tools a.lnk-aula, .tbl-subject-consult a.lnk-aula', function(e) {
                e.preventDefault(); // Enlaces de Aula desactivados en tablas de Herramientas y Consultores
            });

        }

    };

    /**
     * Setup events bloque Herramientas de Comunicación (Profesor)
     * @param subject_id string: identificador asignatura
     */
    var addActivToolsEvents = function(subject_id){
        var $subject = $('#subject_' + subject_id);
        var $tbl = $subject.find('.tbl-activ-tools');

        var hiddenTargets = [];
        for(i=2; i<=$tbl.data('pages'); i++){
           hiddenTargets.push('page_' + i);
       }

        var tblObj = $tbl.DataTable({
            "dom": 'tp',
            "order": [],
            "aoColumnDefs": [
                { "bVisible": false, "aTargets": hiddenTargets }
            ]
        });

        $subject.find('.pagination a').on( 'click', function (e) {
            e.preventDefault();

            if($(this).parent().hasClass('disabled') || $(this).parent().hasClass('current'))
                return false;

           changeActivToolsPage(this);
        } );
    };


     /**
     * Control de paginación Herramientas de comunicación (Profesor)
     * @param elm object: pagination link
     */
    var changeActivToolsPage = function(elm){

        var $pagination = $(elm).closest('.block-activ-tools > .pagination');
        var subject_id = $pagination.data('rel');
        var page = $(elm).data('page');
        var $subject = $('#subject_' + subject_id);
        var $tbl = $subject.find('.tbl-activ-tools');
        var current_page = $tbl.data('page');
        var total_pages = $tbl.data('pages');
        var tblObj = $tbl.DataTable();

        tblObj.columns(['.page_'+current_page]).visible(false);

        if (typeof page === "number"){
            current_page = page;
        } else if (page == "prev"){
            if (current_page>1) current_page--;
        } else if(page == "next"){
            if (current_page<total_pages) current_page++;
        }

        $tbl.data('page', current_page);

        $pagination.data('page', current_page);
        tblObj.columns(['.page_'+current_page]).visible(true);

        if(current_page<=1){
            $pagination.find('.page-prev').parent().addClass('disabled');
        }else{
            $pagination.find('.page-prev').parent().removeClass('disabled');
        }

        if(current_page>=total_pages){
            $pagination.find('.page-next').parent().addClass('disabled');
        }else{
            $pagination.find('.page-next').parent().removeClass('disabled');
        }

        $pagination.find('.current').removeClass('current');
        $pagination.find('ul > li').eq( current_page ).addClass('current');

    };

    /**
     * Setup events Aula: Lista de Estudiantes (Profesor, Consultor)
     * @param subject_id string: identificador asignatura
     */
    var addAulaEvents = function(subject_id){
        var $subject = $('#subject_' + subject_id);

        setupUniform($subject.find('.block-aula input[type=checkbox]'));

        $subject.find('.tbl-aula').DataTable({
            "dom": 'tp',
            "order": [],
            "aoColumnDefs": [
                { "bSortable": false, "aTargets": [ 0 ] },
                { "sType": "date-es", "aTargets": [ 1, 2 ] },
                { "bVisible": false, "aTargets": [ 5, 6, 7, 8 ] }
            ]
        });

        $subject.on('click', 'a.lnk-back-aula', function(e) {
            e.preventDefault();
            $subject.find('.block-head .sub-lbl').remove();
            $subject.find('.block-aula').slideUp({ duration: 500, easing: EASING_DEFAULT });
            $subject.find('.block-subject').slideDown({ duration: 500, easing: EASING_DEFAULT });
        });

        $subject.on('click', 'a.lnk-user', function(e) {
            e.preventDefault();
            getStudentData(subject_id, $(this).data('rel'));
        });

        $subject.find('.block-filters-aula').on("click", 'input[type=checkbox]', function(e) {
            if ($(this).is(":checked")) {
                if( $(this).hasClass('f-days-off') )
                    $subject.find('.block-filters-aula .s-days-off').prop('disabled',false);
                else if( $(this).hasClass('f-status') )
                    $subject.find('.block-filters-aula .s-status').prop('disabled', false);
            } else {
                if( $(this).hasClass('f-days-off') )
                    $subject.find('.block-filters-aula .s-days-off').prop('disabled','disabled');
                else if( $(this).hasClass('f-status') )
                    $subject.find('.block-filters-aula .s-status').prop('disabled', 'disabled');
            }
            $subject.find('.tbl-aula').DataTable().draw();
        });

        $subject.find('.block-aula .block-filters-aula').on("change", 'select', function(e) {
            $subject.find('.tbl-aula').DataTable().draw();
        });

    };

    /**
     * Setup events Aula: Lista de Estudiantes (Tutor)
     * @param subject_id string: identificador asignatura
     */
    var addAulaTutorEvents = function(aula_id, tutor_id){
        var $aula = $('#aula_' + aula_id + '_' + tutor_id);

        setupUniform($aula.find('.block-tutor input[type=checkbox]'));

        $aula.find('.tbl-tutor').DataTable({
            "dom": 'tp',
            "order": [],
            "orderCellsTop": true,
            "aoColumnDefs": [
                { "bSortable": false, "aTargets": [ 0 ] }
            ]
        });

        $aula.on('click', '.tbl-tutor tbody a', function(e) {
            e.preventDefault();
            var tr = $(this).closest('tr');
            getStudentTutorData(aula_id, tutor_id, tr.data('rel'), [$(this).data('filter-col'), $aula.find('.filter-days-off').val()]);
        });

    };

    /**
     * Setup events Ficha Estudiante (Profesor, Consultor)
     * @param subject_id string: identificador asignatura
     */
    var addStudentEvents = function(subject_id){
        var $subject = $('#subject_' + subject_id);

        $subject.find('.block-student .tbl-activ').DataTable({
            "dom": 'tp',
            "order": [],
            "orderCellsTop": true,
            "aoColumnDefs": [
                { "sType": "date-es", "aTargets": [ 1, 2 ] }
            ]
        });

        $subject.find('.block-student .tbl-materials, .block-student .tbl-tools').DataTable({
            "dom": 'tp',
            "order": [],
            "orderCellsTop": true,
            "aoColumnDefs": [
                { "sType": "date-es", "aTargets": [ -1 ] }
            ]
        });

        addTabsEvents($subject.find('.student-tabs'));

        $subject.find( ".acc-plus > li" ).each(function(){
            var activa = ( $(this).hasClass('closed') ) ? 'false' : 0;
            if(!$(this).hasClass('ui-accordion')){
                $(this).accordion({
                    heightStyle: "content",
                    collapsible: true,
                    header: 'h6',
                    active: activa,
                    animate: {
                        easing: EASING_DEFAULT,
                        duration: 300
                    }
                });
            }
        });

        $subject.on('click', 'a.lnk-back-student', function(e) {
            e.preventDefault();
            $subject.find('.block-student').slideUp({ duration: 500, easing: EASING_DEFAULT });
            $subject.find('.block-aula').slideDown({ duration: 500, easing: EASING_DEFAULT });
        });

    };

    /**
     * Setup events Ficha Estudiante (Tutor)
     * @param aula_id string: identificador aula
     * @param tutor_id string: identificador tutor
     */
    var addStudentTutorEvents = function(aula_id, tutor_id){
        var $aula = $('#aula_' + aula_id + '_' + tutor_id);

        $aula.find('.tbl-student').DataTable({
            "dom": 'tp',
            "order": [],
            "aoColumnDefs": [
                { "bSortable": false, "aTargets": [ 0 ] },
                { "sType": "date-es", "aTargets": [ 1, 2, 3 ] }
            ]
        });

        $aula.find( ".acc-plus > li" ).each(function(){
            var activa = ( $(this).hasClass('closed') ) ? 'false' : 0;
            if(!$(this).hasClass('ui-accordion')){
                $(this).accordion({
                    heightStyle: "content",
                    collapsible: true,
                    header: 'h6',
                    active: activa,
                    animate: {
                        easing: EASING_DEFAULT,
                        duration: 300
                    }
                });
            }
        });

        $aula.on('click', 'a.lnk-back-student', function(e) {
            e.preventDefault();
            $aula.find('.block-head > h3 > .lbl').html(I18N_STUDENTS_LIST);
            $aula.find('.block-student').slideUp({ duration: 500, easing: EASING_DEFAULT });
            $aula.find('.block-tutor').slideDown({ duration: 500, easing: EASING_DEFAULT });
        });

        $aula.on('click', '.lnk-remove-filter', function(e) {
            e.preventDefault();
            $aula.find('.block-filters-student > .f-active').val('reset');
            $aula.find('.tbl-student').DataTable().draw();
        });

        $aula.on('click', '.lnk-restore-filter', function(e) {
            e.preventDefault();
            $aula.find('.block-filters-student > .f-active').val($aula.find('.block-filters-student').data('filter'));
            $aula.find('.tbl-student').DataTable().draw();
        });
    };


    /**
     * Render Asignatura (Consultor)
     * @param data json
     */
    var renderSubjectConsultor = function(data){
        //console.log(data);
        var _s= '<div class="block-subhead">' +
                '   <span class="last-update">' + I18N_LAST_UPDATE + ': ' + data.updated + '</span>' +
                '   <div class="block-links">' +
                '       <a href="'+ data.lnk_card +'" class="lnk-extern">' + I18N_SUBJECT_CARD + '<i class="icon"></i></a>' +
                '       <a href="'+ data.lnk_design +'" class="lnk-extern">' + I18N_AULA_DESIGN + '<i class="icon"></i></a>' +
                '   </div>' +
                '</div>';
        _s  +=  renderTableSubject (data.aulas);
        return _s;
    };


    /**
     * Render Asignatura (Profesor)
     * @param data json
     */
    var renderSubjectProfesor = function(data){
        //console.log(data);
        var _s= '<div class="tabs teacher-tabs">' +
                '   <div class="tabs-top"><div class="block-links">' +
                '       <a href="'+ data.lnk_design +'" class="lnk-extern">' + I18N_AULA_DESIGN + '<i class="icon"></i></a>' +
                '   </div></div>' +
                '   <ul>' +
                '       <li><a href="#tabs-1" class="tab">' + I18N_COMM_TOOLS + '</a></li>' +
                '       <li><a href="#tabs-2" class="tab">' + I18N_STUDENTS_DATA + '</a></li>' +
                '       <li><a href="#tabs-3" class="tab">' + I18N_CONSULTANTS_DATA + '</a></li>' +
                '   </ul>' +
                '<div class="tab-content" id="tabs-1">' +
                '<table class="tbl tbl-subgroups">'+
                    '<tbody><tr>'+
                    '<td><a class="btn btn-subgroup btn-subgroup-aula active" href="#" data-rel="0">'+ I18N_AULA_GENERAL +'</a></td>'+
                    '<td style="width:80%">';
            $.each(data.tools, function (i, tool) {
                _s  +=  '<a class="btn btn-subgroup" href="#" data-rel="' + tool.id + '">'+ tool.name +'</a>';
            });
        _s  +=  '   </td></tr></tbody></table>' +
                '   <div class="block-activ-tools"></div>' +
                '</div>' +
                '<div class="tab-content" id="tabs-2">' +
                '<div class="tab-head">' + I18N_NEXT_DELIVERY + ': ' + data.students.next_delivery + '</div>' +
                renderTableSubject(data.students.aulas) +
                '</div>' +
                '<div class="tab-content" id="tabs-3">' +
                '<div class="tab-head">' + I18N_NEXT_DELIVERY + ': ' + data.consultants.next_delivery + '</div>' +
                renderTableConsultants(data.consultants.aulas) +
                '</div>';
        return _s;
    };



    /**
     * Render Tabla de asignatura (Consultor / Profesor)
     * @param aulas data json
     */
    var renderTableSubject = function(aulas){
        var _s= '<table class="tbl tbl-subject">' +
                '<caption>' + I18N_AULAS_LIST + '</caption>' +
                '<colgroup>' +
                '   <col>' +
                '   <col style="width:12%">' +
                '   <col style="width:12%">' +
                '   <col style="width:12%">' +
                '   <col style="width:17%">' +
                '   <col style="width:17%">' +
                '   <col style="width:17%">' +
                '</colgroup>' +
                '<thead>' +
                '   <tr>' +
                '       <th rowspan="2"><span class="th">' + I18N_AULAS + '</span></th>' +
                '       <th colspan="3"><span class="th">' + I18N_SNUM + '</span></th>' +
                '       <th><span class="th">' + I18N_DAYS_WITHOUT_CONN_AULA + '</span></th>' +
                '       <th rowspan="2"><span class="th">' + I18N_LAST_PAC_UNDELIVERED + '</span></th>' +
                '       <th rowspan="2"><span class="th">' + I18N_LAST_PAC_UNPASSED + '</span></th>' +
                '   </tr>' +
                '   <tr>' +
                '       <th class="sub-th"><span class="th">' + I18N_STOTAL + '</span></th>' +
                '       <th class="sub-th no-bd"><span class="th">' + I18N_SREP + '</span></th>' +
                '       <th class="sub-th no-bd"><span class="th">' + I18N_SNEW + '</span></th>' +
                '       <th class="sub-th">'+ renderFilter(daysOffObj, DAYS_OFF_DEFAULT, 'th-filter filter-days-off', true) +'</th>' +
                '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each( aulas, function (i, aula) {
            var data_days_off = '';
            $.each( aula.days_off, function (key, value) {
                data_days_off += 'data-days-'+ key +'="' + value + '" ';
            });
            stotal =  (aula.students.total > 0) ? '<a href="#" data-filter-col="none">' + aula.students.total + '</a>' : 0;
            srep =  (aula.students.is_rep > 0) ? '<a href="#" data-filter-col="f-srep">' + aula.students.is_rep + '</a>' : 0;
            snew =  (aula.students.is_new > 0) ? '<a href="#" data-filter-col="f-snew">' + aula.students.is_new + '</a>' : 0;
            undelivered =  (aula.pac_undelivered > 0) ? '<a href="#" data-filter-col="f-pac-undelivered">' + aula.pac_undelivered + '</a>' : 0;
            unpassed =  (aula.pac_unpassed > 0) ? '<a href="#" data-filter-col="f-pac-unpassed">' + aula.pac_unpassed + '</a>' : 0;
            _s  +=  '   <tr data-rel="'+ aula.id +'" data-name="'+ aula.name +'">' +
                    '       <td><a href="#" class="lnk-aula c_'+ aula.color +'" data-filter-col="none">'+ aula.name +'</a></td>' +
                    '       <td>'+ stotal +'</td>' +
                    '       <td class="no-bd">'+ srep +'</td>' +
                    '       <td class="no-bd">'+ snew +'</td>' +
                    '       <td><a href="#" '+ data_days_off +' class="days-off" data-filter-col="f-days-off">'+ aula.days_off[DAYS_OFF_DEFAULT] +'</a></td>' +
                    '       <td>'+ undelivered +'</td>' +
                    '       <td>'+ unpassed +'</td>' +
                    '   </tr>';
        });
        
        _s  +=  '</tbody></table>';

        return _s;
    };

     /**
     * Render Tabla de consultores (Profesor)
     * @param aulas data json
     */
    var renderTableConsultants = function(aulas){
        var _s= '<table class="tbl tbl-subject-consult">' +
                '<caption>' + I18N_CONSULTANTS_DATA + '</caption>' +
                '<colgroup>' +
                '   <col>' +
                '   <col style="width:22%;>' +
                '   <col style="width:13%">' +
                '   <col style="width:13%">' +
                '   <col style="width:13%">' +
                '   <col style="width:13%">' +
                '   <col style="width:13%">' +
                '</colgroup>' +
                '<thead>' +
                '   <tr>' +
                '       <th><span class="th">' + I18N_AULAS + '</span></th>' +
                '       <th><span class="th">' + I18N_CONSULTANT + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_CONN_CAMPUS + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_CONN_AULA + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_RAC_DOWNLOAD + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_GRADE + '</span></th>' +
                '       <th><span class="th">' + I18N_PENDING_MSGS + '</span></th>' +
                '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each( aulas, function (i, aula) {
            var last_conn_campus = EMPTY_CHAR;
            var last_conn_campus_filter = '01/01/1970';
            var last_conn_aula = EMPTY_CHAR;
            var last_conn_aula_filter = '01/01/1970';
            var last_rac = EMPTY_CHAR;
            var last_rac_filter = '01/01/1970';
            var last_grade = EMPTY_CHAR;
            var last_grade_filter = '01/01/1970';
            var pending = EMPTY_CHAR;
            var pending_filter = 0;
            if (aula.last_conn_campus !== null) {
                last_conn_campus = aula.last_conn_campus;
                last_conn_campus_filter = aula.last_conn_campus;
            }
            if(aula.last_conn_aula !== null) {
                last_conn_aula = aula.last_conn_aula;
                last_conn_aula_filter = aula.last_conn_aula;
            }
            if(aula.last_rac !== null) {
                last_rac = aula.last_rac_download;
                last_rac_filter = aula.last_rac_download;
            }
            if(aula.last_grade !== null) {
                last_grade = aula.last_grade;
                last_grade_filter = aula.last_grade;
            }

            if (aula.pending_msgs !== null) {
                pending = aula.pending_msgs;
                pending_filter = aula.pending_msgs;
            }

            _s  +=  '   <tr data-rel="'+ aula.id +'" data-name="'+ aula.name +'">' +
                    '       <td><a href="#" class="lnk-aula c_'+ aula.color +'">'+ aula.name +'</a></td>' +
                    '       <td class="text-left"><a href="#" class="lnk-consultant">'+ aula.consultant +'</a></td>' +
                    '       <td data-order="'+ last_conn_campus_filter +'">'+ last_conn_campus +'</td>' +
                    '       <td data-order="'+ last_conn_aula_filter +'">'+ last_conn_aula +'</td>' +
                    '       <td data-order="'+ last_rac_filter +'">'+ last_rac +'</td>' +
                    '       <td data-order="'+ last_grade_filter +'">'+ last_grade +'</td>' +
                    '       <td data-order="'+ pending_filter +'"><span class="msgs-pending">'+ pending +'</span></td>' +
                    '   </tr>';
        });
        
        _s  +=  '</tbody></table>';

        return _s;
    };

    /**
     * Render Tools (Profesor)
     * @param data json
     */
    var renderActivTools = function(data,subject_id){
        var nTools = data.tools.length;
        var nPages = Math.ceil(nTools/MAX_TOOLS_PAGE);
        var _page = 0;

        var _s= '<table class="tbl tbl-activ-tools" data-pages="'+ nPages +'" data-page="1">' +
                '<thead>' +
                '   <tr>' +
                '       <th data-page="'+ _page +'" style="width:15%"><span class="th">' + I18N_AULAS + '</span></th>';
        $.each( data.tools, function (i, tool) {
            if (i%MAX_TOOLS_PAGE === 0) _page++;
            _s  +=  '   <th class="page_'+ _page +'" data-page="'+ _page +'"><span class="th">' + tool.name + '</span></th>';
        });
        _s  +=  '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each( data.aulas, function (i, aula) {
            _s  +=  '   <tr data-rel="'+ aula.id +'" data-name="'+ aula.name +'">' +
                    '       <td><a href="#" class="lnk-aula c_'+ aula.color +'">'+ aula.name +'</a></td>';
            $.each( aula.tools, function (i, tool) {
                var tool_pending = EMPTY_CHAR;
                var tool_total = EMPTY_CHAR;
                var tool_filter = 0;
                if (tool.pending !== null) {
                    tool_pending = tool.pending;
                    tool_filter = tool.pending;
                }
                if (tool.total !== null) {
                    tool_total = tool.total;
                }
                _s  +=  '   <td data-order="'+ tool_filter +'"><span class="msgs-pending">'+ tool_pending + '</span> / <span class="msgs-total">' + tool_total +'</span></td>';
            });
            _s  +=  '   </tr>';
        });
        
        _s  +=  '</tbody></table>';

        if(nPages>1){
            _s += '<div class="pagination" data-rel="'+subject_id+'"><ul>';
            _s += ' <li class="disabled"><a href="#" class="page-prev" data-page="prev">'+ I18N_PREV +'</a></li>';
            for(i=1; i<=nPages; i++){
                cls = (i==1) ? 'current' : '';
                _s += ' <li class="'+cls+'"><a href="#" class="page-num" data-page="'+i+'">'+ i +'</a></li>';
            }
            _s += ' <li><a href="#" class="page-next" data-page="next">'+ I18N_NEXT +'</a></li>';
            _s += '</ul></div>';
        }
        return _s;
    };


    /** Render Aula (Profesor, Consultor)
     * @param data json
     * @param filter array - [0: filter class, 1: filters-days-off value]
     * @param subject_id string - idenfificador asignatura
     */
    var renderAula = function(data, filter, subject_id){
        var _s= '<div class="block-subhead">' +
                '   <a href="#" class="lnk-back lnk-back-aula"><span class="arrow"></span> ' + I18N_BACK + ' (' + I18N_AULAS_LIST + ')</a>' +
                '</div>' +
                '<div class="block-subhead">' +
                '   <span class="last-update">' + I18N_LAST_UPDATE + ': ' + data.updated + '</span>' +
                '   <div class="block-links">' +
                '       <a href="'+ data.lnk_aula +'" class="lnk-extern">' + I18N_AULA_GO + '<i class="icon"></i></a>' +
                '       <a href="'+ data.lnk_design +'" class="lnk-extern">' + I18N_AULA_DESIGN + '<i class="icon"></i></a>' +
                '   </div>' +
                '</div>' +
                renderFiltersAula(filter) +
                '<table class="tbl tbl-aula" data-rel="">' +
                '<caption>' + I18N_STUDENTS_LIST + '</caption>' +
                '<colgroup>' +
                '   <col>' +
                '   <col style="width:18%">' +
                '   <col style="width:18%">' +
                '   <col style="width:18%">' +
                '   <col style="width:18%">' +
                '</colgroup>' +
                '<thead>' +
                '   <tr>' +
                '       <th>' +
                '           <a href="#" class="lnk-contact-all LaunchesOWin" target="_blank"><i class="icon"></i>' + I18N_WRITE_SELECTED + ' <i class="arrow"></i></a>' +
                '           <label class="lbl-check-all"><input type="checkbox" class="check-all-users">' + I18N_SELECT_ALL + '</label>' +
                '       </th>' +
                '       <th><span class="th">' + I18N_LAST_CONN_CAMPUS + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_CONN_AULA + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_PAC_DELIVERED + '</span></th>' +
                '       <th><span class="th">' + I18N_STATUS_CURRENT_ACTIV + ': <span class="nowrap">' + data.current_activ.join('</span> / <span class="nowrap">') + '</span></span></th>' +
                '       <th>' + I18N_SREP + '</th>' +
                '       <th>' + I18N_SNEW + '</th>' +
                '       <th>' + I18N_LAST_PAC_UNDELIVERED + '</th>' +
                '       <th>' + I18N_LAST_PAC_UNPASSED + '</th>' +
                '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each(data.students, function (i, student) {
            var cls = (student.is_rep==='yes') ? 'repeater' : '';
            var last_conn_campus = EMPTY_CHAR;
            var last_conn_campus_filter = '01/01/1970';
            var last_conn_aula = EMPTY_CHAR;
            var last_conn_aula_filter = '01/01/1970';
            if (student.last_conn_campus !== null) {
                last_conn_campus = student.last_conn_campus;
                last_conn_campus_filter = student.last_conn_campus;
            }
            if(student.last_conn_aula !== null) {
                last_conn_aula = student.last_conn_aula;
                last_conn_aula_filter = student.last_conn_aula;
            }
            var last_pac_delivered = (student.last_pac_delivered !== null) ? student.last_pac_delivered : EMPTY_CHAR;
            var status = [];
            var statusFilter = [];
            $.each(student.current_activ_status, function (index, value) {
                if(value === 0) status.push('<span title="'+ I18N_NOT_REPORTED +'">'+ statusObj[value] + '</span>');
                else status.push(statusObj[value]);
                statusFilter.push(value);
            });

            _s  +=  '   <tr>' +
                    '       <td><span class="user-item '+ cls +'">' +
                    '           <input type="checkbox" class="check-user" name="check_'+ subject_id + '_'+ data.id +'[]" value="'+ student.id +'">' +
                    '           <a href="#" class="lnk-user" data-rel="'+ student.id +'" data-name="'+ student.name +'" data-col="student">'+student.name+'</a>' +
                    '       </span></td>' +
                    '       <td data-order="'+ last_conn_campus_filter +'" data-filter="'+ last_conn_campus_filter +'">'+ last_conn_campus +'</td>' +
                    '       <td data-order="'+ last_conn_aula_filter +'" data-filter="'+ last_conn_aula_filter +'">'+ last_conn_aula +'</td>' +
                    '       <td>'+ last_pac_delivered +'</td>' +
                    '       <td data-filter="'+ statusFilter.join('|') +'">'+ status.join(' / ') +'</td>' +
                    '       <td>'+ student.is_rep +'</td>' +
                    '       <td>'+ student.is_new +'</td>' +
                    '       <td>'+ student.last_pac_undelivered +'</td>' +
                    '       <td>'+ student.last_pac_unpassed +'</td>' +
                    '   </tr>';
        });
        
        _s  +=  '</tbody></table>';

        return _s;
    };

    /**
     * Render Aula (Tutor)
     * @param data json
     * @param aula_id string - identificador del aula
     * @param tutor_id string - idenfificador del tutor
     */
    var renderAulaTutor = function(data, aula_id, tutor_id ){
        var _s= '<table class="tbl tbl-tutor" data-rel="">' +
                '<caption>' + I18N_STUDENTS_LIST + '</caption>' +
                '<colgroup>' +
                '   <col>' +
                '   <col style="width:18%">' +
                '   <col style="width:18%">' +
                '   <col style="width:18%">' +
                '   <col style="width:18%">' +
                '</colgroup>' +
                '<thead>' +
                '   <tr>' +
                '       <th rowspan="2">' +
                '           <a href="#" class="lnk-contact-all LaunchesOWin" target="_blank"><i class="icon"></i>' + I18N_WRITE_SELECTED + ' <i class="arrow"></i></a>' +
                '           <label class="lbl-check-all"><input type="checkbox" class="check-all-users">' + I18N_SELECT_ALL + '</label>' +
                '       </th>' +
                '       <th  rowspan="2"><span class="th">' + I18N_SUBJECTS_TOTAL + '</span></th>' +
                '       <th><span class="th">' + I18N_WITHOUT_CONN + '</span></th>' +
                '       <th  rowspan="2"><span class="th">' + I18N_LAST_CONN_AULA + '</span></th>' +
                '       <th  rowspan="2"><span class="th">' + I18N_LAST_PAC_DELIVERED + '</span></th>' +
                '   </tr>' +
                '   <tr>' +
                '       <th class="sub-th">' + renderFilter(daysOffObj, DAYS_OFF_DEFAULT, 'th-filter filter-days-off', true) +'</th>' +
                '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each(data.students, function (i, student) {
            cls = (student.is_rep==='yes') ? 'repeater' : '';
            data_days_off = '';
            $.each( student.days_off, function (key, value) {
                data_days_off += 'data-days-'+ key +'="' + value + '" ';
            });
            stotal =  (student.total > 0) ? '<a href="#" data-filter-col="none">' + student.total + '</a>' : 0;
            last_conn =  (student.last_conn_aula > 0) ? '<a href="#" data-filter-col="f-last-conn-aula">' + student.last_conn_aula + '</a>' : 0;
            last_pac =  (student.last_pac_delivered > 0) ? '<a href="#" data-filter-col="f-last-pac-delivered">' + student.last_pac_delivered + '</a>' : 0;

            _s  +=  '   <tr>' +
                    '       <td data-filter-col="none"><span class="user-item '+ cls +'">' +
                    '           <input type="checkbox" class="check-user" name="check_'+ aula_id + '_'+ tutor_id + '_'+ data.id +'[]" value="'+ student.id +'">' +
                    '           <a href="#" class="lnk-user" data-rel="'+ student.id +'" data-name="'+ student.name +'" data-filter-col="none">'+student.name+'</a>' +
                    '       </span></td>' +
                    '       <td>'+ stotal +'</td>' +
                    '       <td><a href="#" '+ data_days_off +' class="days-off" data-filter-col="f-days-off">'+ student.days_off[DAYS_OFF_DEFAULT] +'</a></td>' +
                    '       <td>'+ last_conn +'</td>' +
                    '       <td>'+ last_pac +'</td>' +

                    '   </tr>';
        });
        
        _s  +=  '</tbody></table>';

        return _s;
    };


    /** Render Ficha Estudiante (Profesor, Consultor)
     * @param data json
     */
    var renderStudent = function(data){
        var photo = (data.photo_url !== null) ? '<img src="'+data.photo_url+'" alt="">' : '';
        var _s= '<div class="block-subhead">' +
                '   <a href="#" class="lnk-back lnk-back-student"><span class="arrow"></span> ' + I18N_BACK + ' (' + I18N_STUDENTS_LIST + ')</a>' +
                '   <div class="block-links"><a href="'+data.lnk_rac+'" class="lnk-extern">' + I18N_RAC_GO + ' <i class="icon"></i></a></div>' +
                '</div>' +
                '<div class="block-subhead block-profile">' +
                '   <span class="profile-photo">'+ photo +'</span>' +
                '   <div class="profile-details">' +
                '       <h4>' + data.name + '</h4>' +
                '       <h5><a href="mailto:' + data.email + '">' + data.email + '</a></h5>' +
                '   </div>' +
                '   <ul class="profile-info">' +
                '       <li><strong>' + I18N_TUTORING + ':</strong> ' + data.tutor + '</li>' +
                '       <li><strong>' + I18N_STUDIES + ':</strong> ' + data.studies + '</li>' +
                '   </ul>' +
                '</div>' +
                '<ul class="acc-plus acc-plus-tabs">' +
                '   <li class="closed">' +
                '       <h6>' + I18N_PERSONAL_DATA + '</h6>' +
                '       <ul>';
                $.each(data.personal_data, function (i, value) {
                    _s += '<li>'+ value + '</li>';
                });
        _s+=    '       </ul>'+
                '   </li>' +
                '   <li class="closed">' +
                '       <h6>' + I18N_BUSINESS_DATA + '</h6>' +
                 '      <ul>';
                $.each(data.business_data, function (i, value) {
                    _s += '<li>'+ value + '</li>';
                });
        _s+=    '       </ul>'+
                '   </li>' +
                '</ul>'+
                '<div class="tabs student-tabs">' +
                '   <ul>' +
                '       <li><a href="#tabs-1" class="tab">' + I18N_ACTIVITIES + '</a></li>' +
                '       <li><a href="#tabs-2" class="tab">' + I18N_MATERIALS + '</a></li>' +
                '       <li><a href="#tabs-3" class="tab">' + I18N_TOOLS + '</a></li>' +
                '   </ul>' +
                '<div class="tab-content" id="tabs-1">'+
                '<table class="tbl tbl-activ">' +
                '<caption>' + I18N_ACTIVITIES + '</caption>' +
                '<colgroup>' +
                '   <col>' +
                '   <col style="width:14%">' +
                '   <col style="width:14%">' +
                '   <col style="width:9%">' +
                '   <col style="width:12%">' +
                '   <col style="width:18%">' +
                '</colgroup>' +
                '<thead>' +
                '   <tr>' +
                '       <th><span class="th">' + I18N_ACTIV_NAME + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_VISIT_DATE + '</span></th>' +
                '       <th><span class="th">' + I18N_DELIVERY_DATE + '</span></th>' +
                '       <th><span class="th">' + I18N_GRADE + '</span></th>' +
                '       <th><span class="th">' + I18N_PAC_PLAGI + '</span></th>' +
                '       <th><span class="th">' + I18N_STATUS_CURRENT_ACTIV_SHORT + '</span></th>' +
                '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each(data.activities, function (i, activity) {
            var last_visit = EMPTY_CHAR;
            var last_visit_filter = '01/01/1970';
            var delivery_date = EMPTY_CHAR;
            var delivery_date_filter = '01/01/1970';
            if (activity.last_visit !== null) {
                last_visit = activity.last_visit;
                last_visit_filter = activity.last_visit;
            }
            if(activity.delivery_date !== null) {
                delivery_date = activity.delivery_date;
                delivery_date_filter = activity.delivery_date;
            }
            var status = [];
            var statusFilter = [];
            $.each(activity.current_activ_status, function (index, value) {
                if(value === 0) status.push('<span title="'+ I18N_NOT_REPORTED +'">'+ statusObj[value] + '</span>');
                else status.push(statusObj[value]);
                statusFilter.push(value);
            });

            _s  +=  '   <tr>' +
                    '       <td><span class="nobr">'+ activity.name +'</span></td>' +
                    '       <td data-order="'+ last_visit_filter +'" data-filter="'+ last_visit_filter +'">'+ last_visit +'</td>' +
                    '       <td data-order="'+ delivery_date_filter +'" data-filter="'+ delivery_date_filter +'">'+ delivery_date +'</td>' +
                    '       <td>'+ activity.grade +'</td>' +
                    '       <td>'+ activity.pac_plagi +'</td>' +
                    '       <td data-filter="'+ statusFilter.join('|') +'">'+ status.join(' / ') +'</td>' +
                    '   </tr>';
        });
        
        _s  +=  '</tbody></table></div>' +
                '<div class="tab-content" id="tabs-2">'+
                '<table class="tbl tbl-materials">' +
                '<caption>' + I18N_MATERIALS + '</caption>' +
                '<colgroup>' +
                '   <col>' +
                '   <col style="width:20%">' +
                '   <col style="width:20%">' +
                '</colgroup>' +
                '<thead>' +
                '   <tr>' +
                '       <th><span class="th">' + I18N_MATERIAL_NAME + '</span></th>' +
                '       <th><span class="th">' + I18N_ANNOTATIONS + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_VISIT_DATE + '</span></th>' +
                '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each(data.materials, function (i, material) {
            var last_visit = EMPTY_CHAR;
            var last_visit_filter = '01/01/1970';
            if (material.last_visit !== null) {
                last_visit = material.last_visit;
                last_visit_filter = material.last_visit;
            }
            _s  +=  '   <tr>' +
                    '       <td><span class="nobr">'+ material.name +'</span></td>' +
                    '       <td>'+ material.annotations +'</td>' +
                    '       <td data-order="'+ last_visit_filter +'" data-filter="'+ last_visit_filter +'">'+ last_visit +'</td>' +
                    '   </tr>';
        });

         _s  +=  '</tbody></table></div>' +
                '<div class="tab-content" id="tabs-3">'+
                '<table class="tbl tbl-tools">' +
                '<caption>' + I18N_TOOLS + '</caption>' +
                '<colgroup>' +
                '   <col>' +
                '   <col style="width:20%">' +
                '   <col style="width:20%">' +
                '</colgroup>' +
                '<thead>' +
                '   <tr>' +
                '       <th><span class="th">' + I18N_TOOL_NAME + '</span></th>' +
                '       <th><span class="th">' + I18N_PENDING_MSGS + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_VISIT_DATE + '</span></th>' +
                '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each(data.tools, function (i, tool) {
            var last_visit = EMPTY_CHAR;
            var last_visit_filter = '01/01/1970';
            var tool_pending = EMPTY_CHAR;
            var tool_total = EMPTY_CHAR;
            var tool_filter = 0;
            if (tool.last_visit !== null) {
                last_visit = tool.last_visit;
                last_visit_filter = tool.last_visit;
            }
            if (tool.pending_msgs !== null) {
                tool_pending = tool.pending_msgs;
                tool_filter = tool.pending_msgs;
            }
            if (tool.total_msgs !== null) {
                tool_total = tool.total_msgs;
            }
            _s  +=  '   <tr>' +
                    '       <td><span class="nobr">'+ tool.name +'</span></td>' +
                    '       <td data-order="'+ tool_filter +'"><span class="msgs-pending">'+ tool_pending + '</span> / <span class="msgs-total">' + tool_total +'</span></td>' +
                    '       <td data-order="'+ last_visit_filter +'" data-filter="'+ last_visit_filter +'">'+ last_visit +'</td>' +
                    '   </tr>';
        });
        _s  +=  '</tbody></table></div>';

        return _s;
    };

    /** Render Ficha Estudiante (Tutor)
     * @param data json
     */
    var renderStudentTutor = function(data, filter){
        var photo = (data.photo_url !== null) ? '<img src="'+data.photo_url+'" alt="">' : '';
        var _s= renderFiltersStudent(filter) +
                '<div class="block-subhead">' +
                '   <a href="#" class="lnk-back lnk-back-student"><span class="arrow"></span> ' + I18N_BACK + ' (' + I18N_STUDENTS_LIST + ')</a>' +
                '</div>' +
                '<div class="block-subhead block-profile">' +
                '   <span class="profile-photo">' + photo + '</span>' +
                '   <div class="profile-details">' +
                '       <h4>' + data.name + ' <a href="'+ data.lnk_card +'" class="lnk-profile-card">'+ I18N_SEE_CARD +'</a></h4>' +
                '       <h5><a href="mailto:' + data.email + '">' + data.email + '</a></h5>' +
                '   </div>' +
                '   <ul class="profile-info">' +
                '       <li><strong>' + I18N_TUTORING + ':</strong> ' + data.tutor + '</li>' +
                '       <li><strong>' + I18N_STUDIES + ':</strong> ' + data.studies + '</li>' +
                '   </ul>' +
                '</div>' +
                '<ul class="acc-plus">' +
                '   <li class="closed">' +
                '       <h6>' + I18N_PERSONAL_DATA + '</h6>' +
                '       <ul>';
                $.each(data.personal_data, function (i, value) {
                    _s += '<li>'+ value + '</li>';
                });
        _s +=   '       </ul>'+
                '   </li>' +
                '   <li class="closed">' +
                '       <h6>' + I18N_BUSINESS_DATA + '</h6>' +
                 '      <ul>';
                $.each(data.business_data, function (i, value) {
                    _s += '<li>'+ value + '</li>';
                });
        _s +=   '       </ul>'+
                '   </li>' +
                '</ul>'+
                '<table class="tbl tbl-student">' +
                '<caption>' + I18N_STUDENT_CARD + '</caption>' +
                '<colgroup>' +
                '   <col>' +
                '   <col style="width:17%">' +
                '   <col style="width:17%">' +
                '   <col style="width:17%">' +
                '   <col style="width:17%">' +
                '</colgroup>' +
                '<thead>' +
                '   <tr>' +
                '       <th><span class="th">' + I18N_SUBJECTS + ', ' + I18N_SELECTED_FILTER + ':<br><span class="filter-lbl"></span></span></th>' +
                '       <th><span class="th">' + I18N_DAYS_WITHOUT_CONN + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_CONN_AULA + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_CONN_AULA_TUTOR + '</span></th>' +
                '       <th><span class="th">' + I18N_LAST_PAC_DELIVERED + '</span></th>' +
                '   </tr>' +
                '</thead>' +
                '<tbody>';
        $.each(data.subjects, function (i, subject) {
            var days_without_conn = EMPTY_CHAR;
            var days_without_conn_filter = '01/01/1970';
            var last_conn_aula = EMPTY_CHAR;
            var last_conn_aula_filter = '01/01/1970';
            var last_conn_tutor = EMPTY_CHAR;
            var last_conn_tutor_filter = '01/01/1970';
            var last_pac_delivered = EMPTY_CHAR;
            var last_pac_delivered_filter = 'no';

            if (subject.days_without_conn !== null) {
                days_without_conn = subject.days_without_conn;
                days_without_conn_filter = subject.days_without_conn;
            }
            if(subject.last_conn_aula !== null) {
                last_conn_aula = subject.last_conn_aula;
                last_conn_aula_filter = subject.last_conn_aula;
            }
            if(subject.last_conn_tutor !== null) {
                last_conn_tutor = subject.last_conn_tutor;
                last_conn_tutor_filter = subject.last_conn_tutor;
            }
            if(subject.last_pac_delivered !== null) {
                last_pac_delivered = subject.last_pac_delivered;
                last_pac_delivered_filter = 'yes';
            }

            _s  +=  '   <tr>' +
                    '       <td><a href="#' + subject.id + '" class="nobr">'+ subject.name +'</a></td>' +
                    '       <td data-order="'+ days_without_conn_filter +'" data-filter="'+ days_without_conn_filter +'">'+ days_without_conn +'</td>' +
                    '       <td data-order="'+ last_conn_aula_filter +'" data-filter="'+ last_conn_aula_filter +'">'+ last_conn_aula +'</td>' +
                    '       <td data-order="'+ last_conn_tutor_filter +'" data-filter="'+ last_conn_tutor_filter +'">'+ last_conn_tutor +'</td>' +
                    '       <td data-order="'+ last_pac_delivered +'" data-filter="'+ last_pac_delivered_filter +'">'+ last_pac_delivered +'</td>' +
                    '   </tr>';
        });
        
        _s  +=  '</tbody></table>';

        return _s;
    };



    /**
     * Render error message in context
     * @param context string: block context (subject, aula, student)
     * @param status string
     * @param error string
     */
    var renderError = function(context, status, error){
        var _s= '';
        if(context!='subject' && context!='tools'  && context!='tutor'){
            var _lbl = (context != 'student-tutor') ? I18N_AULAS_LIST : I18N_STUDENTS_LIST;
            _s+='<div class="block-subhead">' +
                '   <a href="#" class="lnk-back lnk-back-'+context+'"><span class="arrow"></span> ' + I18N_BACK + ' (' + _lbl + ')</a>' +
                '</div>';
        }
        _s+= '<div class="error-row">' + status + ": " + error+'</div>';
        return _s;
    };

    /**
     * Render select filter
     * @param values object - array-like object values
     * @param selected string - default key
     * @param cls string - css class
     * @param enabled boolean
     */
    var renderFilter = function(values, selected, cls, enabled){
        var state = (enabled) ? '' : 'disabled="disabled"';
        _s  = '<select class="' + cls + '" ' + state + '>';
        $.each(values, function (key, value) {
            _s +=   '<option value="'+key+'" ';
            if(key===selected) _s+='selected="selected"';
            _s +=   '>' + value + '</option>';
        });
        _s  +=  '</select>';
        return _s;
    };

    /**
     * Render filters Aula
     * @param filter array - [0: filter class, 1: filters-days-off value]
     */
    var renderFiltersAula = function(filter){
        var f = filter[0];
        var d = filter[1];
        var _s= '<div class="block-filters-aula">' +
                '   <h4 class="lbl-filters-aula">' + I18N_FILTER_STUDENTS_BY + ':</h4>' +
                '   <div class="group-filters">' +
                '       <label><input type="checkbox" class="f-srep" '+ ((f === 'f-srep') ? 'checked="checked"' : '') +'>' + I18N_STUDENTS_REP + '</label>' +
                '       <label><input type="checkbox" class="f-snew" '+ ((f === 'f-snew') ? 'checked="checked"' : '') +'>' + I18N_STUDENTS_NEW + '</label>' +
                '   </div>' +
                '   <div class="group-filters">' +
                '       <label><input type="checkbox" class="f-pac-undelivered" '+ ((f === 'f-pac-undelivered') ? 'checked="checked"' : '') +'>' + I18N_LAST_PAC_UNDELIVERED + '</label>' +
                '       <label><input type="checkbox" class="f-pac-unpassed" '+ ((f === 'f-pac-unpassed') ? 'checked="checked"' : '') +'>' + I18N_LAST_PAC_UNPASSED + '</label>' +
                '   </div>' +
                '   <div class="group-filters">' +
                '       <label><input type="checkbox" class="f-days-off" '+ ((f === 'f-days-off') ? 'checked="checked"' : '') +'>' + I18N_DAYS_WITHOUT_CONN_AULA + ':</label>' +
                        renderFilter(daysOffObj, d, 's-days-off', ((f === 'f-days-off') ? true : false)) +
                '   </div>' +
                '   <div class="group-filters">' +
                '       <label><input type="checkbox" class="f-status"  '+ ((f === 'f-status') ? 'checked="checked"' : '') +'>' + I18N_STATUS_CURRENT_ACTIV + ':</label>' +
                        renderFilter(statusObjFilter, STATUS_DEFAULT, 's-status', false) +
                '   </div>' +
                '</div>';
        return _s;
    };

    /**
     * Render filters Student (Tutor)
     * @param filter array - [0: filter class, 1: filters-days-off value]
     */
    var renderFiltersStudent = function(filter){
        var f = filter[0];
        var d = filter[1];
        var _s= '<div class="block-filters-student" data-filter="'+ f +'">' +
                '<input type="hidden" class="f-active" value="' + f + '">' +
                '<input type="hidden" class="f-days-off" value="' + d + '">' +
                '</div>';
        return _s;
    };


    /* Initialize application */
    var init = function(role, d) {
        userRole = role;
        d = d || null;
        today = parseDate(d);

        setupTooltips();
        setupGlobalAdjusts();
        setupUniform();

        switch (userRole){
            case 'student':
                break;
            case 'tutor':
                setupDataTables();
                setupAccordions();
                break;
            default:
                setupDataTables();
                setupAccordions();
                setupSortable();
        }

    };

    return { // public
        init: init,
        dataURL: dataURL,
        addTabsEvents: addTabsEvents
    };

}(jQuery));